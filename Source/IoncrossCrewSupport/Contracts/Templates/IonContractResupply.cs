// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using KSP;
using Contracts;
using Contracts.Parameters;

namespace IoncrossKerbal.Contracts
{
	public class IonContractResupply : Contract
	{
		public IonContractResupply ()
		{
		}
		
		public List<ConfigNode> GetStationFleet()
		{
			List<ConfigNode> Stations;
			//Loops through all ION_CONTRACT_SHIPS configNodes in the GameDatabase
			foreach (ConfigNode Vessels in GameDatabase.Instance.GetConfigNodes("ION_CONTRACT_STATIONS"))
			{
				#if DEBUG
				Debug.Log("IonContractResupply.GetStationFleet(): found ION_CONTRACT_STATIONS node\n" + supportResourceNode.ToString());
				#endif
				
			}
		}
		
		//
		// Fields
		//
		private ProtoVessel station;
		
		[SerializeField]
		protected CelestialBody targetBody;
		
		//
		// Properties
		//
		public CelestialBody TargetBody
		{
			get
			{
				return this.targetBody;
			}
		}
		
		//
		// Methods
		//
		protected override bool Generate ()
		{
			if (this.prestige == Contract.ContractPrestige.Significant)
			{
				this.targetBody = FlightGlobals.Bodies [1];
			}
			else
			{
				if (this.prestige != Contract.ContractPrestige.Exceptional)
				{
					return false;
				}
				List<CelestialBody> bodies = Contract.GetBodies ("some string goes here!!!", Contract.ProgressState.Complete, null);
				bodies.Remove (Planetarium.fetch.Sun);
				bodies.Remove (Planetarium.fetch.Home);

				this.targetBody = bodies [Random.Range (0, bodies.Count)];
				if (this.targetBody == null)
				{
					this.targetBody = PSystemManager.Instance.localBodies [1];
				}
			}

			
			base.SetExpiry ();
			base.SetDeadlineYears (5f, this.targetBody);
			base.SetFunds (10000f, 40000f, this.targetBody);
			base.SetReputation (20f, 20f, this.targetBody);
			return true;
		}
		
		protected override string GetDescription ()
		{
			return TextGen.GenerateBackStories (base.Agent.Name, base.Agent.GetMindsetString, "station logistics", "dwindling supplies", "resupply mission", base.MissionSeed);
		}
		
		protected override string GetHashString ()
		{
			return this.targetBody.name;
		}
		
		protected override string GetSynopsys ()
		{
			return "Resupply" + this.station.vesselName + "in orbit around" + this.targetBody.theName;
		}
		
		protected override string GetTitle ()
		{
			return "Station resupply mission";
		}
		
		public override bool MeetRequirements ()
		{
			return ProgressTracking.Instance.NodeReached ("
			return ProgressTracking.Instance.NodeComplete (new string[]{"",""});
		}
		
		protected override string MessageCancelled ()
		{
		}
		
		protected override string MessageCompleted ()
		{
		}
		
		protected override string MessageDeadlineExpired ()
		{
		}
		
		protected override string MessageFailed ()
		{
		}

		protected override void OnAccepted ()
		{
			uint uniqueFlightID = ShipConstruction.GetUniqueFlightID (HighLogic.CurrentGame.flightState);
		}

		protected override void OnDeclined ()
		{
		}

		protected override void OnGenerateFailed ()
		{
		}

		protected override void OnLoad (ConfigNode node)
		{
		}

		protected override void OnOfferExpired ()
		{
		}
	
		protected override void OnParameterStateChange (ContractParameter p)
		{
			base.OnParameterStateChange (p);
		}

		protected override void OnSave (ConfigNode node)
		{
		}

		protected override void OnWithdrawn ()
		{
		}
	}
}