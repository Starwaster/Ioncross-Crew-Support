// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Reflection;
using UnityEngine;

namespace IoncrossCrewSupport
{
	// Consulted Codepoet's CLS for guidance on using the stock toolbar system
	[KSPAddon(KSPAddon.Startup.EveryScene, false)]
	public class IonToolbar : UnityEngine.MonoBehaviour
	{
		private static Rect windowPosition = new Rect(0,0,360,480);
		private static GUIStyle windowStyle = null;

		private ApplicationLauncherButton IonToolbarButton = null;
		private bool visible = false;

		public static IonToolbar Instance
		{
			get;
			private set;
		}

		public IonToolbar ()
		{
			if (Instance == null) 
			{
				Instance = this;
			}
		}
		public void Awake() 
		{
			// Set up the stock toolbar
			GameEvents.onGUIApplicationLauncherReady.Add(OnGUIAppLauncherReady);
			GameEvents.onGUIApplicationLauncherDestroyed.Add(OnGUIAppLauncherDestroyed);			
		}

		public void Start() 
		{
			// Debug.Log("CLSAddon:Start");
				
			windowStyle = new GUIStyle (HighLogic.Skin.window);
				
			try 
			{
				RenderingManager.RemoveFromPostDrawQueue (0, OnDraw);
			} 
			catch 
			{
				// This is generally not a problem - do not log it.
				// Debug.LogException(ex);
			}
				
			if (HighLogic.LoadedSceneIsEditor || HighLogic.LoadedSceneIsFlight) 
			{
				RenderingManager.AddToPostDrawQueue (0, OnDraw);
			}
		}

		void OnGUIAppLauncherReady()
		{
			if (ApplicationLauncher.Ready)
			{
				this.IonToolbarButton = ApplicationLauncher.Instance.AddModApplication(onAppLaunchToggleOn,
				                                                                         onAppLaunchToggleOff,
				                                                                         DummyVoid,
				                                                                         DummyVoid,
				                                                                         DummyVoid,
				                                                                         DummyVoid,
				                                                                         ApplicationLauncher.AppScenes.VAB | ApplicationLauncher.AppScenes.SPH | ApplicationLauncher.AppScenes.FLIGHT,
				                                                                         (Texture)GameDatabase.Instance.GetTexture("IoncrossCrewSupport/assets/ion_icon_off", false));
			}
		}
		
		void OnGUIAppLauncherDestroyed()
		{
			if (this.IonToolbarButton != null)
			{
				ApplicationLauncher.Instance.RemoveModApplication(this.IonToolbarButton);
				this.IonToolbarButton = null;
			}
		}
		
		void onAppLaunchToggleOn()
		{
			this.IonToolbarButton.SetTexture((Texture)GameDatabase.Instance.GetTexture("IoncrossCrewSupport/assets/ion_icon_on", false));
			this.visible = true;
		}

		void onAppLaunchToggleOff()
		{
			this.IonToolbarButton.SetTexture((Texture)GameDatabase.Instance.GetTexture("IoncrossCrewSupport/assets/ion_icon_off", false));
			
			this.visible = false;
		}


		void DummyVoid()
		{
		}
		private void OnDraw()
		{
			if (this.visible)
			{
				//Set the GUI Skin
				//GUI.skin = HighLogic.Skin;
				
				windowPosition = GUILayout.Window(932484, windowPosition, OnWindow, "Ioncross Configuration", windowStyle,GUILayout.MinHeight(20),GUILayout.ExpandHeight(true));
			}
		}
		public void OnDestroy()
		{

			// Remove the stock toolbar button
			GameEvents.onGUIApplicationLauncherReady.Remove(OnGUIAppLauncherReady);
			if (this.IonToolbarButton != null)
				ApplicationLauncher.Instance.RemoveModApplication(IonToolbarButton);			
		}

		private void OnWindow(int windowID)
		{
			GUILayout.BeginVertical ();
			GUILayout.BeginHorizontal ();
			GUILayout.Label ("Ioncross Stuff");
			GUI.DragWindow();
		}
	}
}

